// 12.4 variables globales

// Marino Alfredo
// this === global = true

// mostrar algo en consola
//console.log(); // es un módulo

// mostrar un mensaje en forma de error
//console.error();


// ejecutar un código despues de un intervalo de tiempo
//setTimeout(()=>{});

// ejecutar un código cada intervalo de tiempo
//setInterval(()=>{});

// da prioridad de ejecución a una función asíncrona
// se ejecuta una vez que termina el hilo principal
// solo es soportado por internet explorer versión 10
//setImmdiate();

//console.log(global);
//console.log(setInterval); // es una función



let i = 0;
let intervalo = setInterval(() => {
    console.log('Hola');
    if (i ===3){ 
    clearInterval(intervalo); //detenemos la funcion
}
i++;
}, 1000);

setImmediate(() => {
    console.log(`Saludo inmediato`);
});

//require();

console.log(__filename);

global.miVariable = `mi variable global`;
console.log(miVariable);

// 13.1 y 13.2 introduccion y teoeria, leer archivos
// traemos el módulo de file system
// sirve para trabajar y manipular archivos de nuestro sistema

const fs = require('fs'); //ya viene instalado en el core de Node

//Primero leemos el archivo.txt
function leer(ruta, cb){
    fs.readFile(ruta, (err, data) => {
        cb(data.toString());
    
    
    })
}

leer(`${__dirname}/archivo.txt`, console.log); //Sintaxis ES6

//13.3

const fs = require('fs');

//Primero leemos el archivo.txt
function leer(ruta, cb){
    fs.readFile(ruta, (err, data)) => {
        cb(data.toString());
    }
}

//Segundo escribimos el archivo1.txt creandolo
function escribir(ruta, contenido, cb) {
    fs.writeFile(ruta, contenido, function (err){
        if (err) {
            console.log('No se ha podido escribir', err);
        } else {
            console.log('Se ha escrito correctamente');
        }
    })
}

escribir(`${__dirname}/archivo1.txt`, 'Reescribimos el archivo', console.log);
leer(`${__dirname}/archivo.txt`, console.log); //Sintaxis ES6

//------------------------------------------------------------------------------------------------
//13.4

//Tercero eliminamos el archivo1.txt
//function borrar(ruta, cb){
//    fs.unlink(ruta, cb); //elimina de manera asincrona
//}

//borrar(`${__dirname}/archivo.txt`, console.log);
